Notes for week 4 of class
29 January 2020

Math libraries

See tutoring schedule if nssy

sep argument to print

numeric data types

floating point numbers imprecise due to rounding (floor ceiling)

16 digit floats approx

type function to determine type

type(thing) => type of thing

floats, ints, strings, etc.

many algorithms are more efficient with ints than floats

div 2 floats : floats

div 2 ints: floats, but possible to truncate to int

modulus operator gives remainder sep.

combining types ints + floats  coerce to float (no lost info, but lost precision

adding .0 coerces to float

implicit typing/casting

round() can round to specified number of digits
 takes 2nd arg
 
using int() instead of eval for int input safer than eval()

simultaneous has limit based on casting ____

change counter program

quarters, dimes, nickels, pennies . . .


idlex  (find idlex.py)
 adds line numbers
 
 ceiling, floor
 
 squaring : math.pow(b 2)
 import math lib
 math.sqrt(x)
 
 
 import math
 def quadrat():
  
  print(1 - b + math.sqrt(b ** 2) - 4 * a * c) / 2 * a)
  print(1 - b - math.sqrt(b ** 2) - 4 * a * c) / 2 * a)

<<< begin quatrat.py >>>
import math
def quadrat():
    print("Get the roots of a quadratic.")
    a = int(input("Enter coefficient A: "))
    b = int(input("Enter coefficient B: "))
    c = int(input("Enter coefficient C: "))
    print((1 - b + math.sqrt(b ** 2) - 4 * a * c) / 2 * a)
    print((1 - b - math.sqrt(b ** 2) - 4 * a * c) / 2 * a)

quadrat()
<<< end quadrat.py


from math import . . .

math.pow

https://www.cs.trinity.edu/~jhowland/ccsc98/ccsc98/node5.html


factorial

accumulator pattern

initial variable to 1 when 0 won't work

use range (start, stop, step)



Wk5: download graphics library (book)

Try the new cross-platform PowerShell https://aka.ms/pscore6
